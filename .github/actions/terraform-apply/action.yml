name: "Run Terraform Apply Action"
description: "Deploy infrastructure using Terraform"
inputs:
  hetzner_token:
    description: "Hetzner API token"
    required: true
  domain_name:
    description: "Domain name to manage DNS records forr"
    required: true
  terraform_command:
    description: "Terraform command to use"
    required: false
    default: "terraform"

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Debug - Check Terraform Command
      shell: bash
      env:
        TERRAFORM_COMMAND: ${{ inputs.terraform_command }}
      run: echo Using Terraform command $TERRAFORM_COMMAND

    - name: Terraform Init
      run: ${{ inputs.terraform_command }} init
      shell: bash
      working-directory: ./

    - name: Terraform Apply
      id: apply
      run: ${{ inputs.terraform_command }} apply -auto-approve -input=false
      shell: bash
      env:
        TF_VAR_domain_name: ${{ inputs.domain_name }}
        TF_VAR_hetzner_token: ${{ inputs.hetzner_token }}
      working-directory: ./

    - name: Output DNS Record IDs
      id: output
      env:
        TERRAFORM_COMMAND: ${{ inputs.terraform_command }}
      run: |
        # Get the output from the terraform command
        dns_output=$($TERRAFORM_COMMAND output -json dns_record_ids)

        # Set the output for GitHub Actions
        echo "::set-output name=dns_record_ids::$dns_output"
      shell: bash
      working-directory: ./

    - name: Debug - Check DNS Record IDs
      run: echo DNS Record IDs ${{ steps.output.outputs.dns_record_ids }}
      shell: bash
